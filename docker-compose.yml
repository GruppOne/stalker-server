version: "3.7"

#################### THIS SECTIONS CONTAINS SOME EXPLANATIONS AND TIPS ON HOW TO WORK WITH DOCKER-COMPOSE ##############

# The password required to access our services are specified inside a .env file in the repository root directory. The env structure is documented in the .env.template file.

# The "ports" mapping exposes the given ports to the HOST. The "expose" mapping only exposes given the ports to other services, which is what we want because only the server talks to the external world

# We use named volumes short syntax: [SOURCE:]TARGET[:MODE].
# SOURCE is the named volume, TARGET is the folder inside the container MODE is ro (read-only),

# We can use this command to dump the currently running mysql instance to a file:
# docker exec rdb bash -c 'exec mysqldump --all-databases -u"root" -p"$MYSQL_ROOT_PASSWORD"' > ./db/relational/dump/all-databases.sql

# To get an interactive shell inside a RUNNING container, use:
# 'docker-compose exec <service-mapping-key> <shell-command>'

########################################################################################################################

services:
  # TODO add server container configuration
  # server:
  #   build: ...
  #   depends_on:
  #     - rdb
  #     - tsdb

  rdb:
    build:
      context: ./db/relational
      # target: name-of-stage

    restart: always

    environment:
      # The username is root (default)
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:?err}

    expose:
      - "3306"

    healthcheck:
      test:
        - "CMD"
        - "mysql"
        - "-u"
        - "root"
        - "--password=$MYSQL_ROOT_PASSWORD"
        - "-e"
        - "SELECT table_name FROM information_schema.tables WHERE table_schema = 'stalker-rdb'"
        - "stalker-rdb"
      interval: 1m
      timeout: 30s
      retries: 3
      start_period: 3m

    volumes:
      - type: volume
        source: rdb-data
        target: /var/lib/mysql

  tsdb:
    build:
      context: ./db/time-series
      # target: name-of-stage

    restart: always

    environment:
      INFLUXDB_ADMIN_USER: root
      INFLUXDB_ADMIN_PASSWORD: ${INFLUXDB_ADMIN_PASSWORD:?err}

    expose:
      - "8086"

    volumes:
      - type: volume
        source: tsdb-data
        target: /var/lib/influxdb

  ldap-server:
    build:
      context: ./db/ldap

    restart: always

    environment:
      LDAP_ORGANISATION: Stalker test organization
      LDAP_DOMAIN: stalker.intern
      LDAP_ADMIN_PASSWORD: test1234
      LDAP_BASE_DN: dc=stalker,dc=intern

    expose:
      # for unsecure connection
      - "389"
      # for encrypted SSL connection
      - "636"

    volumes:
      - ldap-data:/var/lib/ldap
      - ldap-config:/etc/ldap/slapd.d

volumes:
  rdb-data:
  tsdb-data:
  ldap-data:
  ldap-config:
