version: "3.7"

#################### THIS SECTIONS CONTAINS SOME EXPLANATIONS AND TIPS ON HOW TO WORK WITH DOCKER-COMPOSE ##############

# The password required to access our services are specified inside a .env file in the repository root directory. The env structure is documented in the .env.template file.

# The "ports" mapping exposes the given ports to the HOST. The "expose" mapping only exposes given the ports to other services, which is what we want because only the server talks to the external world

# We use named volumes short syntax: [SOURCE:]TARGET[:MODE].
# SOURCE is the named volume, TARGET is the folder inside the container MODE is ro (read-only),

# We can use this command to dump the currently running mysql instance to a file:
# docker exec rdb bash -c 'exec mysqldump --all-databases -u"root" -p"$MYSQL_ROOT_PASSWORD"' > ./db/relational/dump/all-databases.sql

# To get an interactive shell inside a RUNNING container, use:
# 'docker-compose exec <service-mapping-key> <shell-command>'

########################################################################################################################

services:
  # TODO add server container configuration
  # server:
  #   build: ...
  #   depends_on:
  #     - rdb
  #     - tsdb

  rdb:
    build:
      context: ./db/relational
      # target: name-of-stage

    restart: always

    environment:
      # The username is root (default)
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:?err}

    expose:
      - "3306"

    volumes:
      - type: volume
        source: rdb-data
        target: /var/lib/mysql

  # TODO check if this influxdb configuration works
  tsdb:
    build:
      context: ./db/time-series
      # target: name-of-stage

    restart: always

    environment:
      # TODO is this needed?
      # TODO we probably should not create the db here
      INFLUXDB_DB: stalker-tsdb
      INFLUXDB_ADMIN_USER: root
      INFLUXDB_ADMIN_PASSWORD: ${INFLUXDB_ADMIN_PASSWORD:?err}

    expose:
      - "8086"

    volumes:
      - type: volume
        source: tsdb-data
        target: /var/lib/influxdb/data

  # FIXME not working
  # api-docs:
  #     image: swaggerapi/swagger-ui
  #     ports:
  #         - 8083:8080
  #     environment:
  #         URL: api/openapi.yaml
  #     volumes:
  #       - type: bind
  #         source: ./api
  #         target: /usr/share/nginx/html/api
  #       - type: bind
  #         source: ./api
  #         target: /api

volumes:
  rdb-data:
  tsdb-data:
