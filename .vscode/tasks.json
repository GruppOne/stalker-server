{
  "version": "2.0.0",
  "type": "shell",
  "presentation": {
    "echo": true,
    "reveal": "silent",
    "focus": false,
    "panel": "dedicated",
    "showReuseMessage": true,
    "clear": false
  },
  "isBackground": true,
  "problemMatcher": [],
  "tasks": [
    {
      "label": "run spectral lint",
      "command": "spectral lint ./api/**.yaml",
      "isBackground": false,
      "problemMatcher": {
        "base": "$eslint-stylish",
        "source": "spectral"
      }
    },
    {
      "label": "run prism mock on port 11111",
      "command": "prism mock --port 11111 --dynamic ./api/openapi.yaml ",
      "isBackground": false,
      "presentation": {
        "reveal": "always",
        "focus": true,
      },
    },
    {
      "label": "build plantuml images",
      "command": "java",
      "args": [
        "-jar",
        "${env:PLANTUML_JAR}",
        "-progress",
        "-failfast",
        "-checkmetadata",
        "-charset",
        "UTF-8",
        "-x",
        "${workspaceRoot}/docs/style/*.pu",
        "-o",
        "img",
        "${workspaceRoot}/docs/diagrams/*.pu"
      ],
      "isBackground": false,
    },
    {
      "label": "format java code continuously",
      "command": "./gradlew spotlessApply --continuous",
    },
    {
      "label": "compile all java code continuously",
      "command": "./gradlew classes testClasses --continuous --info",
      "group": "build",
    },
    {
      "label": "format and compile java code continuously",
      "command": "./gradlew spotlessApply classes testClasses --continuous --info",
    },
    {
      "label": "test java code",
      "command": "./gradlew test jacocoTestReport",
      "group": {
        "kind": "test",
        "isDefault": true
      }
    },
    {
      "label": "open test and coverage report",
      "command": "& ./build/reports/tests/test/index.html ; & build/reports/jacoco/test/html/index.html",
      "group": "test"
    },
    {
      "label": "test java code continuously",
      "command": "./gradlew test jacocoTestReport --continuous",
      "group": "build",
    },
    {
      "label": "bootRun - run spring boot application",
      "command": "./gradlew bootRun --info",
      "presentation": {
        "reveal": "always",
      },
      "group": {
        "kind": "build",
        "isDefault": true
      }
    },
    {
      "label": "compose up rdb and rdb-gui",
      "type": "shell",
      "command": "docker-compose up -d rdb rdb-gui && docker-compose logs -f rdb",
      "group": "build",
    },
    {
      "label": "compose down (remove built images and volumes)",
      "type": "shell",
      "command": "docker-compose down --remove-orphans --volumes --rmi local",
      "isBackground": false,
      "presentation": {
        "reveal": "always",
        "focus": true,
      },
      "group": "build",
    },
  ]
}
