# TODO find a way to have these regexes be the source of truth across every component
type: object
description: Data reprenting an user.
required:
  - id

properties:
  id:
    $ref: "./GenericId.yaml#"

  email:
    type: string
    format: email
    # XXX we do NOT offer the possibility to change the email
    # FIXME patterns are unneeded. the format already specifies a type that we will define elsewhere
    pattern: ^([a-zA-Z0-9_.+-])+@(([a-zA-Z0-9-])+.)+([a-zA-Z0-9])+$
    example: mariorossi@gmail.com

  password:
    type: string
    format: password
    # Minimum eight characters, at least one uppercase letter, one lowercase letter, one number and one special character
    # FIXME patterns are unneeded. the format already specifies a type that we will define elsewhere
    pattern: ^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,32}$
    minLength: 8
    maxLength: 32
    example: ArelativelysecurePassw0rd!

  userData:
    type: object
    description: An user's personal data.
    required:
      - firstName
      - lastName
      - birthDate

    properties:
      firstName:
        type: string
        minLength: 3
        example: Mario
      lastName:
        type: string
        example: Rossi
      birthDate:
        type: string
        format: date
        example: "1990-01-01"
      # these properties should be generated by the client or by the server?
      # @createdDate and @lastModifiedDate are set when a row is inserted and/or updated
      createdDate:
        type: string
        format: date-time
        description: This property is generated automatically by the client.
        readonly: true
      lastModifiedDate:
        type: string
        format: date-time
        description: This property is generated automatically by the client.
