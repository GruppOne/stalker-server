openapi: "3.0.2"
info:
  title: Stalker API
  version: "0.1.0"
  description: "Stalker API - GruppOne for Imola Informatica"

servers:
  - url: http://localhost:8080/
    description: Development server
  # - url: https://{environment}.GruppOne.com/v1
  #     variables:
  #       environment:
  #         default: api    # Production server
  #         enum:
  #           - api         # Production server
  #           - api.dev     # Development server
  #           - api.staging # Staging server

tags:
  - name: users
    description: Operations concerning users
  - name: organizations
    description: Operations concerning organizations
  - name: movement tracking
    description: Updates to an user's current position

paths:
  /user:
    get:
      tags:
        - users
      summary: Get the list of registered users
      responses:
        "200":
          description: Success
    ###################################################################################### new user registration
    post:
      summary: Register a new user
      responses:
        "200":
          description: User successfully registered
        "406":
          description: Email already registered
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"

  /user/login:
    post:
      tags:
        - users
      summary: User login in Stalker's app
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "200":
          description: Login was successful
        "400":
          description: Incorrect credentials

  /user/logout:
    post:
      tags:
        - users
      summary: An user wants to log out from his client
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CloseSession"
      responses:
        "200":
          description: Successfully logged out
        "408":
          description: Request timed out

  /user/passwordRecovery:
    post:
      tags:
        - users
      summary: An user requires to reset his Stalker account's password
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: string
              description: the email address of the account that needs to recover the password
      responses:
        "200":
          description: an email was sent to the specified address
        "406":
          description: email does not match an account

  /user/{userId}:
    get:
      tags:
        - users
      summary: Get information about a specific user
      parameters:
        - in: path
          name: userId
          schema:
            type: integer
          required: true
          description: numeric id of the user
      responses:
        "200":
          description: Success
        "404":
          $ref: "#/components/responses/NotFound"
    delete:
      summary: delete the specified user account
      parameters:
        - in: path
          name: userId
          schema:
            type: integer
          required: true
          description: numeric id of the user
      responses:
        "200":
          description: Success
        "400":
          description: Invalid username supplied
        "404":
          description: User not found

  /user/{userId}/history:
    get:
      tags:
        - users
      summary: Get the history of the current user's accesses to organizations
      parameters:
        - in: path
          name: userId
          schema:
            type: integer
          required: true
          description: Id of the user
      responses:
        "200":
          description: Success
        "404":
          description: User has no history

  /user/{userId}/findConnectedOrganizations:
    get:
      tags:
        - users
        - organizations
      summary: Returns the list of organizations that a user has connected to
      parameters:
        - in: path
          name: userId
          schema:
            type: integer
          required: true
          description: Id of the user
      responses:
        "200":
          description: The list of the ids of the organizations the user is connected to

  /organization:
    get:
      tags:
        - organizations
      summary: Returns the list of all the organizations registered to Stalker
      responses:
        "200":
          description: The list of organizations registered to Stalker
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Organization"


  /organization/{organizationId}:
    get:
     tags:
      - organization
     summary: Get information about a specific organization
     parameters:
       - in: path
         name: userId
         schema:
            type: integer
         required: true
         description: numeric id of the organization
     responses:
        "200":
          description: Success
        "404":
          $ref: "#/components/responses/NotFound"

    delete:
      summary:  delete the specified organization
      operationId: organizationId
      parameters:
        - in: path
          name: organizationID
          schema:
            type: integer
          required: true
          description: numeric id of the organization
      responses:
        "200":
          description: success, the organization will be deleted
        "400":
          description: organization not found
        "408":
          description: request timed out

  /organization/addOrganization:
    post:
      tags:
        - organizations
      summary: a owner wants to create a new organization
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/resourceSchemas/organization.yaml"
      responses:
        "200":
          description: success, the organization will be created
        "400":
          description: the organization already exists


  ##/organization/updateOrganization:
  ##  put:
  ##    responses:



  # /user/{userId}/placeCurrentTime/{placeId}:
  #   get:
  #     tags:
  #       - users
  # TODO is it needed?
  # /user/{userId}/userData:
  #   post:
  #     responses:
  #       "200"
  # /user/findByOrganization/{organizationId}:
  #   get:
  #     responses:
  #       "200":
  #         responseBody:

components:
  responses:
    $ref: "./components/responses.yml"

  schemas:
    $ref: "./components/schemas.yml"

  securitySchemes:
    $ref: "./components/securitySchemes.yml"
