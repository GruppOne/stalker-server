openapi: "3.0.2"

info:
  title: Stalker API
  description: |
    The API specification developed by GruppOne for the Stalker project.
  contact:
    name: GruppOne
    email: gruppone.swe@gmail.com
    url: https://github.com/GruppOne

  version: "0.1.0"

servers:
  - url: http://localhost:8080/api/v0
    description: Development server
  # TODO specify servers using an appropriate variable
  # - url: https://{environment}.GruppOne.com/v1
  #     variables:
  #       environment:
  #         default: api    # Production server
  #         enum:
  #           - api         # Production server
  #           - api.dev     # Development server
  #           - api.staging # Staging server

tags:
  - name: stalker mobile app
    description: This operation should be available to mobile app users.
  - name: stalker web app
    description: This operation should be available to web app users (owners, managers, viewers).

# TODO explicitly declare permissions schema for admin roles
# TODO use plurals: /users, not /user
paths:
  /user/login:
    post:
      tags:
        - stalker mobile app
        - stalker web app
      description: Log in an existing user.
      operationId: loginUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "200":
          description: Login was successful.
        "401":
          description: Not Authorized because of incorrect credentials.
        default:
          $ref: "#/components/responses/DefaultResponse"

  /user/{userId}/subscribed:
    parameters:
      - $ref: "#/components/parameters/userId"

    get:
      tags:
        - stalker mobile app
        - stalker web app
      description: Return the list of organizations that a user has connected to.
      operationId: getConnectedOrganizationsByUserId
      responses:
        "200":
          description: The list of the ids of the organizations the user is connected to.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "./schemas/genericId.yaml"
        "404":
          $ref: "#/components/responses/NotFound"
        default:
          $ref: "#/components/responses/DefaultResponse"

  /organization:
    get:
      tags:
        - stalker mobile app
        - stalker web app
      # TODO rename to "get the list etc"
      description: Return the list of all the organizations registered to Stalker.
      operationId: getAllOrganizations
      responses:
        "200":
          description: The list of organizations registered to Stalker.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Organization"
        "404":
          $ref: "#/components/responses/NotFound"
        default:
          $ref: "#/components/responses/DefaultResponse"

  /organization/{organizationId}/place:
    parameters:
      - $ref: "#/components/parameters/organizationId"
    post:
      tags:
        - stalker web app
      description: Add a new place to the given organization. Operation reserved only to the managers and up.
      operationId: addPlaceIntoAnOrganizationById
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Organization"
      responses:
        "200":
          description: Success, the place has been created.
        "400":
          description: The place already exists inside the current organization.
        "401":
          $ref: "#/components/responses/Unauthorized"
        default:
          $ref: "#/components/responses/DefaultResponse"

  /tracking/inside:
    post:
      tags:
        - stalker mobile app
      description: Signal that an user has entered into a place.
      operationId: reportUserEnteredInAPlace
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/PlaceUserCounter"
      responses:
        "200":
          description: Success, an user has entered into an organizations.
        "408":
          description: Request timed out.
        default:
          $ref: "#/components/responses/DefaultResponse"

  /tracking/outside:
    post:
      tags:
        - stalker mobile app
      description: Report an user who has exited by a place.
      operationId: reportUserExitedInAPlace
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/PlaceUserCounter"
      responses:
        "200":
          description: Success, an user has entered into an organizations.
        "408":
          description: Request timed out.
        default:
          $ref: "#/components/responses/DefaultResponse"

# Apply security scheme globally
security:
  - AdminKey: []

components:
  parameters:
    userId:
      in: path
      name: userId
      description: The id of an user.
      required: true
      schema:
        $ref: "./schemas/genericId.yaml"

    organizationId:
      in: path
      name: organizationId
      description: The id of an organization.
      required: true
      schema:
        $ref: "./schemas/genericId.yaml"

    placeId:
      in: path
      name: placeId
      description: The id of a place.
      required: true
      schema:
        $ref: "./schemas/genericId.yaml"

  # TODO add explicit json content to errors
  responses:
    DefaultResponse:
      description: Unexpected error

    NotFound:
      description: The specified resource was not found

    NotImplemented:
      description: This endpoint has not been implemented yet.

    Unauthorized:
      description: Unauthorized

  schemas:
    AppConnections:
      $ref: "./schemas/appConnections.yaml"

    LdapConfiguration:
      $ref: "./schemas/ldapConfiguration.yaml"

    Organization:
      $ref: "./schemas/organization.yaml"

    OrganizationUserCounter:
      $ref: "./schemas/organizationUserCounter.yaml"

    PlaceUserCounter:
      $ref: "./schemas/placeUserCounter.yaml"

    User:
      $ref: "./schemas/user.yaml"

    UserData:
      $ref: "./schemas/userData.yaml"

  securitySchemes:
    AdminKey:
      type: apiKey
      in: header
      # name of the header
      name: STALKER-ADMIN-API-KEY
