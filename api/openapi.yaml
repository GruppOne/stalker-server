openapi: 3.0.3
info:
  title: Stalker API
  description: |
    The API specification developed by GruppOne for the Stalker project.
  contact:
    name: GruppOne
    email: gruppone.swe@gmail.com
    url: 'https://github.com/GruppOne'
  license:
    name: GNU GPLv3
    url: 'https://www.gnu.org/licenses/gpl-3.0-standalone.html'
  version: 0.5.0
servers:
  - url: 'http://localhost:11111'
    description: Development server.
  - url: 'https://{environment}.gruppone.tech/v{majorVersion}'
    variables:
      environment:
        enum:
          - api.staging
          - api
        default: api
      majorVersion:
        default: '0'
    description: Staging and Production servers.
tags:
  - name: stalker mobile app
    description: This operation should be available to mobile app users.
  - name: stalker web app
    description: 'This operation should be available to web app users (owners, managers, viewers).'
paths:
  /location/update:
    post:
      description: "We send inside/outside updates on the user's position relative to the places of the organizations they're connected to give the server enough information to estimate the number of people currently inside a building, using the power of MATH and STATISTICS."
      operationId: postLocationUpdate
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./model/LocationInfo.v1.yaml
        required: true
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        default:
          $ref: '#/components/responses/DefaultResponse'
      summary: "Create an update for a user's current location."
      tags:
        - stalker mobile app
  '/organization/{organizationId}':
    delete:
      description: Delete the specified organization. Operation reserved only to the administrator.
      operationId: deleteOrganizationById
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '408':
          $ref: '#/components/responses/RequestTimeout'
        default:
          $ref: '#/components/responses/DefaultResponse'
      summary: Delete an organization.
      tags:
        - stalker web app
    get:
      description: Get all information about a specific organization INCLUDING ldapConfiguration.
      operationId: getOrganizationById
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: ./model/Organization.v1.yaml
          description: Ok. The response contains all the informations of the specific organization.
        '400':
          description: Bad Request
        default:
          $ref: '#/components/responses/DefaultResponse'
      summary: "Read an organization's information."
      tags:
        - stalker mobile app
        - stalker web app
    parameters:
      - $ref: '#/components/parameters/organizationId'
    put:
      description: Send the changed data about a specific organization. Operation reserved only to the administrator.
      operationId: putOrganizationDataById
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./model/Organization.v1.yaml
        required: true
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '408':
          $ref: '#/components/responses/RequestTimeout'
        default:
          $ref: '#/components/responses/DefaultResponse'
      summary: "Update an organization's data."
      tags:
        - stalker web app
  '/organization/{organizationId}/place/{placeId}':
    delete:
      description: Delete the specified place. Operation reserved only to the managers and up.
      operationId: deletePlace
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    enum:
                      - A place has been deleted with success.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        default:
          $ref: '#/components/responses/DefaultResponse'
      summary: Delete a place.
      tags:
        - stalker web app
    parameters:
      - $ref: '#/components/parameters/organizationId'
      - $ref: '#/components/parameters/placeId'
    put:
      description: Change data for a specific place. Operation reserved only to the managers and up.
      operationId: putPlaceData
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./model/Place.v1.yaml
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  place:
                    $ref: ./model/PlaceData.v1.yaml
        '401':
          $ref: '#/components/responses/Ok'
        '403':
          description: Forbidden
        default:
          $ref: '#/components/responses/DefaultResponse'
      summary: "Update a place's data."
      tags:
        - stalker web app
    get:
      summary: Read information of a place.
      operationId: get-organization-organizationId-place-placeId
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  place:
                    $ref: ./model/PlaceData.v1.yaml
        '400':
          description: Bad Request
        default:
          $ref: '#/components/responses/DefaultResponse'
      description: Get all the information about a specific place in a specific organization.
      tags:
        - stalker web app
  '/organization/{organizationId}/places':
    parameters:
      - $ref: '#/components/parameters/organizationId'
    post:
      description: Add a new place to the given organization. Operation reserved only to the managers and up.
      operationId: postPlaceByOrganizationId
      parameters:
        - $ref: '#/components/parameters/organizationId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./model/PlaceData.v1.yaml
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: ./model/GenericId.v1.yaml
          description: Ok. The response contains the id of the newly created place.
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        default:
          $ref: '#/components/responses/DefaultResponse'
      summary: Create a new place.
      tags:
        - stalker web app
    get:
      summary: Read places of the organization.
      operationId: get-organization-organizationId-places
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  places:
                    $ref: ./model/PlaceData.v1.yaml
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        default:
          $ref: '#/components/responses/DefaultResponse'
      description: Get all the places of a specific organization.
      tags:
        - stalker mobile app
        - stalker web app
  '/organization/{organizationId}/users/connections':
    get:
      description: Get the list of all users connected to an organization.
      operationId: get-organization-organizationId-users-connected
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  connectedUsers:
                    items:
                      $ref: ./model/User.v1.yaml
                    type: array
                type: object
          description: OK
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        default:
          $ref: '#/components/responses/DefaultResponse'
      summary: Read the list of users connected to an organization.
      tags: []
    parameters:
      - $ref: '#/components/parameters/organizationId'
  '/organization/{organizationId}/users/role':
    delete:
      description: Delete an existing role for a user.
      operationId: delete-organization-organizationId-users-role
      requestBody:
        content:
          application/json:
            schema:
              properties:
                roleData:
                  $ref: ./model/OrganizationRole.v1.yaml
              type: object
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    enum:
                      - It has been removed a role for an user.
          description: OK
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        default:
          $ref: '#/components/responses/DefaultResponse'
      summary: Delete a role for a user.
      tags:
        - stalker web app
    parameters:
      - $ref: '#/components/parameters/organizationId'
    post:
      description: Add a new role for a user.
      operationId: post-organization-organizationId-users-role
      requestBody:
        content:
          application/json:
            schema:
              properties:
                roleData:
                  $ref: ./model/OrganizationRole.v1.yaml
              type: object
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    enum:
                      - An user has a new role.
          description: OK
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        default:
          $ref: '#/components/responses/DefaultResponse'
      summary: Create a role for a user in an organization.
      tags:
        - stalker web app
  /organizations:
    get:
      description: 'Get the list of all the organizations registered to Stalker, complete with all details EXCEPT private information (ldapConfiguration).'
      operationId: get-organizations
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  organizations:
                    type: array
                    items:
                      $ref: ./model/Organization.v1.yaml
          description: Ok. The response contains the list of organizations registered to Stalker.
        '401':
          $ref: '#/components/responses/Unauthorized'
        default:
          $ref: '#/components/responses/DefaultResponse'
      summary: Read all organizations.
      tags:
        - stalker mobile app
        - stalker web app
    post:
      description: Request the creation of a new organization.
      operationId: postOrganizations
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./model/OrganizationData.v1.yaml
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: ./model/GenericId.v1.yaml
          description: Ok. The response contains the id of the newly created organization.
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        default:
          $ref: '#/components/responses/DefaultResponse'
      summary: Create an organization.
      tags:
        - stalker web app
  /user/login:
    post:
      description: This endpoint should not have a security scheme.
      operationId: postUserLoginCredentials
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./model/LoginData.v1.yaml
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: ./model/User.v1.yaml
          description: "Ok. The response contains the authenticated user's data."
        '401':
          content:
            application/json:
              schema:
                properties:
                  message:
                    enum:
                      - This email/password combination is not valid
                    type: string
                type: object
          description: Unauthorized.
        default:
          $ref: '#/components/responses/DefaultResponse'
      security: []
      summary: Create a login request for a user.
      tags:
        - stalker mobile app
        - stalker web app
  /user/password/recovery:
    post:
      description: Request password recovery for an email.
      operationId: post-user-password-recovery
      requestBody:
        content:
          application/json:
            schema:
              properties:
                email:
                  format: email
                  type: string
              required:
                - email
              type: object
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    enum:
                      - The new password has been replaced with success.
        '400':
          content:
            application/json:
              schema:
                properties:
                  message:
                    enum:
                      - This email is not valid.
                    type: string
                required:
                  - message
                type: object
          description: Bad Request
        default:
          $ref: '#/components/responses/DefaultResponse'
      security: []
      summary: "Create a request to recover a user's password."
      tags:
        - stalker mobile app
  '/user/{userId}':
    delete:
      description: Request to delete a user and its data.
      operationId: delete-user-userId
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    enum:
                      - An user has been removed by Stalker.
        '400':
          description: Bad Request
        default:
          $ref: '#/components/responses/DefaultResponse'
      summary: Delete a user from Stalker.
      tags:
        - stalker mobile app
    put:
      description: "Update a user's data."
      operationId: put-user-userId
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  userData:
                    $ref: ./model/UserData.v1.yaml
        '400':
          description: Bad Request
        default:
          $ref: '#/components/responses/DefaultResponse'
      summary: "Update a user's data."
      tags:
        - stalker mobile app
    get:
      summary: Read information about an user.
      operationId: get-user-userId
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: ./model/User.v1.yaml
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        default:
          $ref: '#/components/responses/DefaultResponse'
      description: Get information of a specific user.
      tags:
        - stalker web app
    parameters:
      - $ref: '#/components/parameters/userId'
  '/user/{userId}/logout':
    parameters:
      - $ref: '#/components/parameters/userId'
    post:
      description: Send a logout request.
      operationId: post-user-logout
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    enum:
                      - User disconnected by Stalker.
        '400':
          description: Bad Request
        default:
          $ref: '#/components/responses/DefaultResponse'
      summary: Create a logout request for a user.
      tags:
        - stalker mobile app
        - stalker web app
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  $ref: ./model/GenericId.v1.yaml
  '/user/{userId}/organizations/connections':
    parameters:
      - $ref: '#/components/parameters/userId'
    get:
      description: Get the list of organizations that a user has connected to.
      operationId: getSpecificUserConnectedOrganizations
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  connectedOrganizations:
                    items:
                      $ref: ./model/GenericId.v1.yaml
                    type: array
                required:
                  - connectedOrganizations
                type: object
          description: Ok. The response contains the list of the ids of the organizations the user is connected to.
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        default:
          $ref: '#/components/responses/DefaultResponse'
      summary: Read the list of all organizations a user is connected to.
      tags:
        - stalker mobile app
        - stalker web app
    delete:
      summary: Delete a user connection to an organization.
      operationId: delete-user-userId-organizations-connection
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    enum:
                      - User disconnected.
        '400':
          description: Bad Request
        default:
          $ref: '#/components/responses/DefaultResponse'
      description: Request the disconnection of a user from an organization.
      requestBody:
        content:
          application/json:
            schema:
              properties:
                organizationId:
                  $ref: ./model/GenericId.v1.yaml
                ldapAuthentication:
                  type: object
              type: object
              required:
                - organizationId
      tags:
        - stalker mobile app
    post:
      description: The request body has the ldap property only if the organization is private.
      operationId: post-user-userId-organization-organizationId-connect
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                organizationId:
                  $ref: ./model/GenericId.v1.yaml
              required:
                - organizationId
      responses:
        '200':
          description: OK
        '401':
          content:
            application/json:
              schema:
                properties:
                  message:
                    enum:
                      - The LDAP credentials for this organization were invalid.
                    type: string
                type: object
          description: Unauthorized
        default:
          $ref: '#/components/responses/DefaultResponse'
      summary: Create a request to connect a user to an organization.
      tags:
        - stalker mobile app
  '/user/{userId}/places/history':
    get:
      description: "Get the history of a user's visited places."
      operationId: get-user-userId-history
      responses:
        '204':
          description: No Content (not implemented yet)
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        default:
          $ref: '#/components/responses/DefaultResponse'
      summary: "Read a user's visited places history."
      tags: []
    parameters:
      - $ref: '#/components/parameters/userId'
  /users:
    get:
      description: Get all users registered on Stalker.
      operationId: get-users
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  users:
                    items:
                      $ref: ./model/User.v1.yaml
                    type: array
                type: object
          description: Ok.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        default:
          $ref: '#/components/responses/DefaultResponse'
      summary: Read all users.
      tags:
        - stalker web app
    post:
      description: Create a new user.
      operationId: post-users
      requestBody:
        content:
          application/json:
            schema:
              properties:
                loginData:
                  $ref: ./model/LoginData.v1.yaml
                userData:
                  $ref: ./model/UserData.v1.yaml
              required:
                - loginData
                - userData
              type: object
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: ./model/GenericId.v1.yaml
          description: OK
        '400':
          content:
            application/json:
              schema:
                properties:
                  message:
                    enum:
                      - This email is not valid or is already registered
                    type: string
                required:
                  - message
                type: object
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        default:
          $ref: '#/components/responses/DefaultResponse'
      security: []
      summary: Create a user.
      tags:
        - stalker mobile app
  /version:
    get:
      description: Get the current server version.
      operationId: get-version
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  version:
                    type: string
                    description: "The server's version number."
                    example: 0.1.0
                    pattern: "^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)$"
                required:
                  - version
          description: Ok. The response contains the current server version.
        '400':
          description: Bad Request
        default:
          $ref: '#/components/responses/DefaultResponse'
      summary: "Read the server's current version."
      tags:
        - stalker web app
        - stalker mobile app
      security: []
  '/organization/{organizationId}/report':
    parameters:
      - $ref: '#/components/parameters/organizationId'
    get:
      summary: Read an organizational report.
      tags: []
      responses:
        '204':
          description: No Content (not implemented yet)
        default:
          $ref: '#/components/responses/DefaultResponse'
      operationId: get-organization-organizationId-report
      description: 'Get a report detailing user accesses, time spent at each place and most frequented places. Optional feature.'
security:
  - AdminKey: []
  - bearerAuth: []
components:
  schemas:
    AuthenticationError:
      type: object
      description: Could not authenticate a user.
      title: Authentication Error
      properties:
        message:
          type: string
          enum:
            - The server could not authenticate the user.
    AuthorizationError:
      type: object
      description: Could not authorize request.
      title: Authorization Error
      properties:
        message:
          type: string
          enum:
            - The server could not authorize the request.
      required:
        - message
    UnexpectedError:
      type: object
      title: Unexpected Error
      properties:
        message:
          type: string
          enum:
            - The server encountered an unexpected error.
      required:
        - message
  parameters:
    userId:
      in: path
      name: userId
      description: The id of a user.
      required: true
      schema:
        $ref: ./model/GenericId.v1.yaml
    organizationId:
      in: path
      name: organizationId
      description: The id of an organization.
      required: true
      schema:
        $ref: ./model/GenericId.v1.yaml
    placeId:
      in: path
      name: placeId
      description: The id of a place.
      required: true
      schema:
        $ref: ./model/GenericId.v1.yaml
  responses:
    Ok:
      description: Ok.
    Unauthorized:
      description: The user is not authenticated.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AuthenticationError'
    Forbidden:
      description: The user is authenticated but not authorized.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AuthorizationError'
    NotFound:
      description: The specified resource was not found.
    RequestTimeout:
      description: The specified request has exceeded the time limit.
    NotImplemented:
      description: This endpoint has not been implemented yet.
    DefaultResponse:
      description: Unexpected error.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UnexpectedError'
  securitySchemes:
    AdminKey:
      type: apiKey
      in: header
      name: STALKER-ADMIN-API-KEY
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: ''
    Oauth scoped authorizations:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: 'http://localhost:11111/authorize'
          tokenUrl: ''
          scopes:
            user: "a user's authorized operations"
            viewer: "a viewer's authorized operations"
            manager: "a manager's authorized operations"
            owner: "an owner's authorized operations"
          refreshUrl: 'http://localhost:11111/refresh'
      description: "Stalker's server API uses OAuth 2 in order to manage authorizations"
