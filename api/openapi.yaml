openapi: 3.0.3
info:
  title: Stalker API
  description: |
    The API specification developed by GruppOne for the Stalker project.
  contact:
    name: GruppOne
    email: gruppone.swe@gmail.com
    url: 'https://github.com/GruppOne'
  license:
    name: GNU GPLv3
    url: 'https://www.gnu.org/licenses/gpl-3.0-standalone.html'
  version: 0.5.0
servers:
  - url: 'http://localhost:11111'
    description: Development server.
  - url: 'https://{environment}.gruppone.tech/v{majorVersion}'
    variables:
      environment:
        enum:
          - api.staging
          - api
        default: api
      majorVersion:
        default: '0'
    description: Staging and Production servers.
tags:
  - name: stalker mobile app
    description: This operation should be available to mobile app users.
  - name: stalker web app
    description: This operation should be available to web app users (owners, managers, viewers).
paths:
  /version:
    get:
      tags:
        - stalker web app
        - stalker mobile app
      description: Get the current server version.
      operationId: getVersion
      responses:
        '200':
          description: Ok. The response contains the current server version.
          content:
            application/json:
              schema:
                type: object
                required:
                  - version
                properties:
                  version:
                    type: string
                    description: The server's version number.
                    example: X.Y.Z
        default:
          $ref: '#/components/responses/DefaultResponse'
      summary: Read the server's current version.
  /location/update:
    post:
      tags:
        - stalker mobile app
      description: |
        This is the cornerstone of our tracking mechanism. Sending "inside/outside" updates on the user's position relative to the places of the organizations they're connected to gives the server enough information to estimate the number of people currently inside a building, using the power of MATH and STATISTICS.
      operationId: postLocationUpdate
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: ./model/LocationInfo.v1.yaml
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        default:
          $ref: '#/components/responses/DefaultResponse'
      summary: Create an update for a user's current location.
  /authenticate:
    post: #TODO
      tags:
        - stalker mobile app
        - stalker web app
      description: This endpoint should not have a security scheme.
      operationId: postUserLoginCredentials
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: ./model/Login.v1.yaml
      responses:
        '200':
          description: Ok. The response contains user authenticated data.
          content:
            application/json:
              schema:
                $ref: ./model/User.v1.yaml
        '401':
          $ref: '#/components/responses/Unauthorized'
        '501':
          $ref: '#/components/responses/NotImplemented'
        default:
          $ref: '#/components/responses/DefaultResponse'
      summary: Create a login request for an user.
  /user/{userId}/connected:
    parameters:
      - $ref: '#/components/parameters/userId'
    get: #TODO
      tags:
        - stalker mobile app
        - stalker web app
      description: Get the list of organizations that a user has connected to.
      operationId: getSpecificUserConnectedOrganizations
      responses:
        '200':
          description: Ok. The response contains the list of the ids of the organizations who the user is connected to.
          content:
            application/json:
              schema:
                type: object
                properties:
                  connected:
                    type: array
                    items:
                      $ref: ./model/GenericId.v1.yaml
                required:
                  - connected
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '501':
          $ref: '#/components/responses/NotImplemented'
        default:
          $ref: '#/components/responses/DefaultResponse'
      summary: Read all organizations an user is connected to.
  /organizations:
    get:
      tags:
        - stalker mobile app
        - stalker web app
      description: Get the list of all the organizations registered to Stalker, complete with all details.
      operationId: getOrganizations
      responses:
        '200':
          description: Ok. The response contains the list of organizations registered to Stalker.
          content:
            application/json:
              schema:
                type: object
                properties:
                  organizations:
                    type: array
                    items:
                      $ref: ./model/Organization.v1.yaml
                required:
                  - organizations
        '401':
          $ref: '#/components/responses/Unauthorized'
        default:
          $ref: '#/components/responses/DefaultResponse'
      summary: Read all organizations.
      security:
        - Oauth scoped authorizations:
            - user
            - viewer
    post:
      tags:
        - stalker web app
      description: Request the creation of a new organization.
      operationId: postOrganizations
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: ./model/OrganizationData.v1.yaml
      responses:
        '200':
          description: Ok. The response contains the id of the newly created organization.
          content:
            application/json:
              schema:
                $ref: ./model/GenericId.v1.yaml
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        default:
          $ref: '#/components/responses/DefaultResponse'
      summary: Create an organization.
  /organization/{organizationId}:
    parameters:
      - $ref: '#/components/parameters/organizationId'
    get:
      tags:
        - stalker mobile app
        - stalker web app
      description: Get information about a specific organization.
      operationId: getOrganizationById
      responses:
        '200':
          description: Ok. The response contains all the informations of the specific organization.
          content:
            application/json:
              schema:
                $ref: ./model/Organization.v1.yaml
        '404':
          $ref: '#/components/responses/NotFound'
        '501':
          $ref: '#/components/responses/NotImplemented'
        default:
          $ref: '#/components/responses/DefaultResponse'
      summary: Get organization's information.
    delete: #TODO
      tags:
        - stalker web app
      description: Delete the specified organization. Operation reserved only to the administrator.
      operationId: deleteOrganizationById
      responses:
        '200':
          $ref: "#/components/responses/Ok"
        '401':
          description: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '408':
          $ref: '#/components/responses/RequestTimeout'
        '501':
          $ref: '#/components/responses/NotImplemented'
        default:
          $ref: '#/components/responses/DefaultResponse'
      summary: Delete an organization.
    put: #TODO
      tags:
        - stalker web app
      description: Send the changed data about a specific organization. Operation reserved only to the administrator.
      operationId: putOrganizationDataById
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: ./model/Organization.v1.yaml
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '408':
          $ref: '#/components/responses/RequestTimeout'
        '501':
          $ref: '#/components/responses/NotImplemented'
        default:
          $ref: '#/components/responses/DefaultResponse'
      summary: Update an organization.
  /organization/{organizationId}/place:
    post: #TODO
      tags:
        - stalker web app
      description: Add a new place to the given organization. Operation reserved only to the managers and up.
      operationId: postPlaceByOrganizationId
      parameters:
      - $ref: "#/components/parameters/organizationId"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: ./model/PlaceData.v1.yaml
      responses:
        '200':
          description: Ok. The response contains the id of the newly created place.
          content:
            application/json:
              schema:
                $ref: ./model/GenericId.v1.yaml
        '400':
          description: The place already exists inside the current organization.
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '501':
          $ref: '#/components/responses/NotImplemented'
        default:
          $ref: '#/components/responses/DefaultResponse'
      summary: Add a new place.
  /organization/{organizationId}/place/{placeId}:
    parameters:
      - $ref: '#/components/parameters/organizationId'
      - $ref: '#/components/parameters/placeId'
    put: #TODO
      tags:
        - stalker web app
      description: Change data for a specific place. Operation reserved only to the managers and up.
      operationId: putPlaceData
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: ./model/Place.v1.yaml
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '400':
          $ref: '#/components/responses/NotFound'
        '501':
          $ref: '#/components/responses/NotImplemented'
        default:
          $ref: '#/components/responses/DefaultResponse'
      summary: Update a place.
    delete: #TODO
      tags:
        - stalker web app
      description: Delete the specified place. Operation reserved only to the managers and up.
      operationId: deletePlace
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '404':
          $ref: '#/components/responses/NotFound'
        '501':
          $ref: '#/components/responses/NotImplemented'
        default:
          $ref: '#/components/responses/DefaultResponse'
      summary: Remove a place.

  #TODO /organization/{id}/subscribed --> list of users subscribed to organization: is it needed?
  #TODO to add /monitor and /tracking endpoints of oldPaths.yaml, branch all-endpoints

security:
  - AdminKey: []
  - bearerAuth: []
components:
  parameters:
    userId:
      in: path
      name: userId
      description: The id of a user.
      required: true
      schema:
        $ref: ./model/GenericId.v1.yaml
    organizationId:
      in: path
      name: organizationId
      description: The id of an organization.
      required: true
      schema:
        $ref: ./model/GenericId.v1.yaml
    placeId:
      in: path
      name: placeId
      description: The id of a place.
      required: true
      schema:
        $ref: ./model/GenericId.v1.yaml
  responses:
    Ok: #200
      description: Ok.
    Unauthorized: #401
      description: The user is not authenticated.
    Forbidden: #403
      description: The user is authenticated but not authorized.
    NotFound: #404
      description: The specified resource was not found.
    RequestTimeout: #408
      description: The specified request has exceeded the time limit.
    DefaultResponse:
      description: Unexpected error.
    NotImplemented: #501
      description: This endpoint has not been implemented yet.
  securitySchemes:
    AdminKey:
      type: apiKey
      in: header
      name: STALKER-ADMIN-API-KEY
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: ''
    Oauth scoped authorizations:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: 'http://localhost:11111/authorize'
          tokenUrl: ''
          scopes:
            user: "a user's authorized operations"
            viewer: "a viewer's authorized operations"
            manager: "a manager's authorized operations"
            owner: "an owner's authorized operations"
          refreshUrl: 'http://localhost:11111/refresh'
      description: "Stalker's server API uses  OAuth 2 in order to manage authorizations"
